Вопросы:
- разделение на пкеты и классы

- аргументы командной строки (загуглить)


Составляющие:
+ диалог с пользователем

+ запрос ключа
- запрос пути - обработать ошибки
- проверка пути
   а) файл оригинала по заданному адресу существует
   б) Исходный текст для шифрования должен быть в файле. Желательно в формате txt.
   в) программа должна уметь работать с большими текстами на сотни страниц.
   г) не системный файл
- записать в файл - составить относительный путь

ч.1 алгоритм зашифровки
+ код
  а) проверить что он есть в вашем алфавите. Если нет - вас ломают хакеры. Паникуйте (ну или верните ошибку).
+ код на отрицательный ключь

ч.2 алгоритм расшифровки по ключу
+ код
+ код на отрицательный ключь
- сохранение статистики - Вы будете этот код использовать в следующий под-задачах, поэтому выводить результат в поток.

ч.3  расшифровка брут форс (перебор ключей)

   - Используйте пример текста (репрезентативный текст автора или в том же стиле);
   -можете составить словарь слов и составить метрику основанную на том сколько слов совпало и какой они длины;
   - или иную метрику которая изучает длину слов и предложений, или посмотреть какие буквы чаще всего
   предшествуют каким буквам или словарь наиболее частых начал слова (3 буквы),
   - можно вообще не использовать никаких репрезентативных файлов и проверить правильность пунктуации и пробелов;

- можно сравнить с аналит. данными из ч.1
- метрики (а, и, в, на, с, ... точка, заглавная первая, длина слова)
сортировка в Мар
просчитать в каком из ключей максимальное соответствие (пока не ясно зачем)

ч.4 расшифровка статистическим анализом
кол-во слов, которые чаще всего встречаются

